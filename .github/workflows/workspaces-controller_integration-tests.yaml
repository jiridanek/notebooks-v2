name: "workspaces/controller: integration-tests"

permissions: {}

on:
  push:
    branches: [ "main", "notebooks-v2", "v*-branch" ]
  pull_request:
    paths: [ "workspaces/controller/**" ]
    branches: [ "main", "notebooks-v2", "v*-branch" ]

jobs:

  "integration-tests":
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - img: "workspace-controller:local"

    steps:

      - uses: actions/checkout@v4

      - name: Build Notebook Controller Image
        run: make docker-build
        env:
          IMG: "${{ matrix.img }}"
        working-directory: workspaces/controller

      - uses: helm/kind-action@v1
        with:
          version: v0.23.0
          node_image: kindest/node:v1.25.16@sha256:5da57dfc290ac3599e775e63b8b6c49c0c85d3fec771cd7d55b45fae14b38d3b
          cluster_name: kind

      - name: Deploy image into kind
        run: kind load docker-image "${{ matrix.img }}"

      - name: Build & Apply manifests
        run: |
          # don't try to rebuild manifests before deploy
          make --assume-old=manifests deploy

          # wait for controller pod to come up, print `kubectl describe` to help diagnose problems
          thence=$(date +%s)
          until kubectl wait pods -n workspace-controller-system -l control-plane=controller-manager --for=condition=Ready --timeout=10s; do
            # print some helpful status in case the pod is not coming up
            kubectl describe deployments -n workspace-controller-system
            kubectl describe pods -n workspace-controller-system

            now=$(date +%s)
            duration=$(( $now - $thence ))
            if (( $duration > 300 )); then exit 1; fi

            sleep 5
          done
          kubectl describe pods -n workspace-controller-system
        env:
          IMG: "${{ matrix.img }}"
        working-directory: workspaces/controller

      - name: Print controller logs
        if: "${{ ! cancelled() }}"
        run: kubectl logs -l control-plane=controller-manager -n workspace-controller-system
